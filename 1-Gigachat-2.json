[
    {
        "question": "﻿Какие роли пользователей необходимо реализовать при проектировании интернет-магазина и как отличаются их права?",
        "answer": "Пользователи интернет-магазина могут быть разделены на несколько ролей: гость, зарегистрированный пользователь, менеджер и администратор. Права этих пользователей различаются в зависимости от их роли.\n\nГость имеет ограниченные права и может выполнять следующие действия:\n- Просматривать страницы: \"Главная\", \"Каталог\", \"Новости\", \"Оплата и доставка\", \"Контакты\", \"О компании\", \"Вход\", \"Регистрация\".\n- Оставлять отзывы и пожелания.\n\nЗарегистрированный пользователь получает дополнительные права:\n- Совершать покупки.\n- Комментировать товары и новости.\n\nМенеджеры имеют еще больше прав:\n- Могут просматривать и редактировать заказы покупателей.\n\nАдминистраторы обладают максимальными правами:\n- Создавать и редактировать новости и товары.\n- Управлять аккаунтами пользователей.",
        "elapsed_time": 2.0,
        "точность": 8,
        "грамотность": 10,
        "полнота": 8,
        "лаконичность": 9
    },
    {
        "question": "Что такое и чем отличаются http и https?",
        "answer": "HTTPS отличается от HTTP использованием шифрования SSL/TLS, что обеспечивает более высокий уровень безопасности при передаче данных в Интернете. Порт для HTTPS по умолчанию — 443, в отличие от порта 80 для HTTP.",
        "elapsed_time": 1.7,
        "точность": 9,
        "грамотность": 10,
        "полнота": 9,
        "лаконичность": 10
    },
    {
        "question": "Что такое фронтенд?",
        "answer": "Фронтенд — это презентационная часть информационной или программной системы, её пользовательский интерфейс и связанные с ним компоненты, для создания которой используются HTML и CSS.",
        "elapsed_time": 1.6,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Что собой представляет бэкенд?",
        "answer": "Бэкенд представляет собой программно-аппаратную часть сервиса, которая отвечает за работу на сервере и взаимодействие с приложением вне браузера или компьютера, подключенного к сети. Он включает в себя логику работы приложения, обработку данных и взаимодействие с базой данных. Бэкенд-разработчики работают с серверными языками программирования, такими как PHP, Ruby, Java, Python и JavaScript, и используют различные фреймворки для создания и управления серверной частью приложений.",
        "elapsed_time": 1.9,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Как используется язык JavaScript?",
        "answer": "JavaScript используется во многих областях, включая создание веб-сайтов, игр, мобильных приложений, настольных приложений, программирование серверов и многое другое. Он работает в браузере и может взаимодействовать с HTML и CSS, изменяя их содержимое и стиль.",
        "elapsed_time": 1.7,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Зачем нужны и какими способами включаются в веб-документы стилевые таблицы CSS?",
        "answer": "Внешняя таблица стилей подключается к HTML-документу с помощью ссылки на отдельный файл CSS. Это позволяет отделить структуру веб-документа от его внешнего вида, что дает возможность гибкого управления дизайном и упрощает поддержку и изменение стилей. Изменения, внесенные в таблицу стилей, автоматически применяются ко всем страницам, связанным с этой таблицей, что делает управление дизайном сайта более эффективным.",
        "elapsed_time": 1.9,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Может ли и каким образом язык JavaScript использоваться на стороне сервера?",
        "answer": "JavaScript может использоваться на стороне сервера с помощью таких инструментов, как Node.js, который предоставляет серверный runtime для выполнения JavaScript-кода вне браузера. Это позволяет разработчикам писать как клиентские, так и серверные компоненты приложения на одном языке, что упрощает разработку и поддержку проекта. Node.js предоставляет доступ к различным модулям и библиотекам, позволяющим взаимодействовать с базами данных, файловой системой и другими серверными ресурсами.",
        "elapsed_time": 1.9,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "В каких случаях для реализации веб-сайта будет предпочтителен язык Java?",
        "answer": "Java будет предпочтителен для реализации веб-сайта в следующих случаях:\n\n1. Когда требуется высокая производительность и надежность.\n2. Когда необходима кроссплатформенность и поддержка многих СУБД.\n3. Когда разрабатывается крупный веб-сайт, приложение или сервис.",
        "elapsed_time": 1.8,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Какая СУБД и почему предпочтительнее для хранения данных веб-сайта?",
        "answer": "Для хранения данных веб-сайта предпочтительнее использовать \"Microsoft SQL Server\". Эта СУБД обладает множеством преимуществ, включая возможность шифрования базы данных без изменений в приложении, сжатие исходящего потока журналов для достижения оптимальной производительности зеркалирования, а также поддержку реляционной модели баз данных и стандарта SQL.",
        "elapsed_time": 1.8,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Как получить доменное имя для сайта?",
        "answer": "Для получения доменного имени для сайта нужно выполнить следующие шаги:\n1. Выбрать доменное имя.\n2. Проверить, не занято ли выбранное имя другим пользователем.\n3. Арендовать и зарегистрировать доменное имя у регистратора домена.\n4. Найти хостинговую компанию, которая предоставит ресурсы на сервере.\n5. Оплатить хостинг и домен.\n\nХостинг представляет собой арендуемое у провайдера файловое пространство на веб-сервере, где разворачивается сайт. Доменное имя служит уникальным идентификатором (адресом) сайта, по которому пользователи могут найти его в сети Интернет.",
        "elapsed_time": 2.1,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Как задать размеры изображения при компоновке html документа?",
        "answer": "Для задания размеров изображения при компоновке HTML документа можно использовать атрибуты `width` и `height`. Например:\n\n```html\n<img src=\"image.jpg\" width=\"200\" height=\"300\" alt=\"Example Image\">\n```\n\nЭти атрибуты позволяют задать конкретные размеры изображения в пикселях. Если указана только ширина (`width`), то высота (`height`) будет пропорционально изменена, чтобы сохранить соотношение сторон изображения.",
        "elapsed_time": 2.0,
        "точность": 7,
        "грамотность": 10,
        "полнота": 7,
        "лаконичность": 7
    },
    {
        "question": "Что собой представляет и чем полезна технология AJAX?",
        "answer": "AJAX (Asynchronous JavaScript and XML) — это набор технологий, используемых в веб-разработке, которые позволяют динамически обновлять содержимое веб-страницы без необходимости её перезагрузки. Эта технология обеспечивает асинхронное взаимодействие между веб-страницей и сервером, что позволяет приложениям в Интернете обмениваться данными с сервером без перезапуска страницы. Принцип работы AJAX заключается в использовании JavaScript и XMLHttpRequest для отправки и получения данных от сервера без обновления всей страницы.",
        "elapsed_time": 2.0,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 9
    },
    {
        "question": "Какие преимущества обеспечивает использование библиотеки JQuery?",
        "answer": "Преимущества использования библиотеки jQuery включают:\n1. Упрощение взаимодействия с HTML-документами через JavaScript.\n2. Легкий доступ к любому элементу DOM и управление его атрибутами и содержимым.\n3. Возможность манипулирования элементами DOM.\n4. Кроссбраузерные CSS-селекторы для обеспечения совместимости с различными браузерами.\n5. Обработка событий, что позволяет реагировать на действия пользователя.\n6. Визуальные эффекты для улучшения пользовательского интерфейса.\n7. AJAX-дополнения для обновления контента без полной перезагрузки страницы.\n8. Использование JavaScript-плагинов для расширения функциональности.",
        "elapsed_time": 2.2,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "С использованием каких тегов html создаются таблицы в веб-документах?",
        "answer": "Для создания таблиц в веб-документах с использованием HTML применяются следующие теги:\n\n- `<table>` - основной тег для определения таблицы.\n- `<tr>` - тег строки таблицы.\n- `<th>` - заголовочная ячейка таблицы.\n- `<td>` - обычная ячейка таблицы.\n- `<colgroup>` и `<col>` - группы столбцов и отдельные столбцы соответственно, для управления шириной столбцов.\n\nПример использования этих тегов для создания простой таблицы:\n\n```html\n<!DOCTYPE html>\n<html lang=\"ru\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Таблица</title>\n</head>\n<body>\n    <table>\n        <tr>\n            <th>Заголовок 1</th>\n            <th>Заголовок 2</th>\n            <th>Заголовок 3</th>\n        </tr>\n        <tr>\n            <td>Данные 1</td>\n            <td>Данные 2</td>\n            <td>Данные 3</td>\n        </tr>\n        <tr>\n            <td>Данные 4</td>\n            <td>Данные 5</td>\n            <td>Данные 6</td>\n        </tr>\n    </table>\n</body>\n</html>\n```\n\nОтвет не может быть дан на основе предоставленного контекста.",
        "elapsed_time": 3.1,
        "точность": 5,
        "грамотность": 10,
        "полнота": 5,
        "лаконичность": 5
    },
    {
        "question": "Как реализовать динамичное скрытие и отображение объектов на веб-странице?",
        "answer": "Ответ не может быть дан на основе предоставленного контекста.",
        "elapsed_time": 1.5,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Как задать семейство и размер шрифта при верстке веб-страницы средствами html?",
        "answer": "Для задания семейства и размера шрифта при верстке веб-страницы средствами HTML можно использовать CSS (Cascading Style Sheets). В CSS можно задать семейство шрифта и его размер для различных элементов страницы, таких как заголовки (h1, h2 и т.д.), абзацы (p), списки (ul, ol) и другие. Например, чтобы задать определенное семейство и размер шрифта для заголовков h1 и абзацев p, можно использовать следующий код:\n\n```css\nh1 {\n    font-family: Arial, sans-serif; /* Задает семейство шрифта */\n    font-size: 24px; /* Задает размер шрифта */\n}\n\np {\n    font-family: Georgia, serif; /* Задает семейство шрифта */\n    font-size: 16px; /* Задает размер шрифта */\n}\n```\n\nЭти стили будут унаследованы всеми элементами, которые используют эти классы. Например:\n\n```html\n<!DOCTYPE html>\n<html lang=\"ru\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Пример страницы</title>\n    <link rel=\"stylesheet\" href=\"styles.css\"> <!-- Подключаем файл стилей -->\n</head>\n<body>\n    <h1>Заголовок</h1>\n    <p>Текст абзаца</p>\n</body>\n</html>\n```\n\nТаким образом, изменяя стили в файле `styles.css`, можно задавать семейство и размеры шрифтов для различных частей веб-страницы.",
        "elapsed_time": 3.3,
        "точность": 7,
        "грамотность": 10,
        "полнота": 7,
        "лаконичность": 5
    },
    {
        "question": "Что такое urls.py в Django?",
        "answer": "Ответ на основе предоставленного контекста:\n\nurls.py в Django используется для настройки маршрутов URL в проекте. Этот файл определяет набор URL-шаблонов, которые указывают Django, как обрабатывать входящие запросы и какие представления использовать для этих запросов. Когда веб-сервер получает запрос от клиента, Django использует файлы urls.py для определения того, какое представление должно быть вызвано для обработки запроса.",
        "elapsed_time": 3.7,
        "точность": 9,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 9
    },
    {
        "question": "Для чего нужен файл settings.py в Django?",
        "answer": "Файл `settings.py` в Django используется для описания всех глобальных правил и настроек для проекта. В этом файле указываются пути к базам данных, подключаемые приложения, пути к статическим и медиа файлам, а также секретный ключ проекта и переменная, определяющая состояние разработки. Этот файл важен для конфигурации проекта и его функциональности.",
        "elapsed_time": 1.8,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Что означает DOCTYPE в HTML разметке веб-страницы?",
        "answer": "DOCTYPE в HTML разметке веб-страницы указывает на используемый тип документа (Document Type Definition, или DTD). Это определяет, какие теги, атрибуты и их значения действительны для данной версии HTML. DOCTYPE также указывает на соответствующий DTD-файл в Интернете, который содержит правила для конкретной версии HTML.",
        "elapsed_time": 1.8,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Приведи пример, как задать и настроить рамку блочного элемента веб-страницы средствами CSS?",
        "answer": "Для задания и настройки рамки блочного элемента веб-страницы средствами CSS можно использовать свойство `border`. Это свойство позволяет задать толщину, стиль и цвет границы вокруг блока. Например, чтобы добавить границу шириной 1 пиксель, с черным цветом и сплошной линией, можно использовать следующий код:\n\n```css\n/* Пример настройки рамки для блока с классом \"box\" */\n.box {\n    border: 1px solid black; /* Ширина, стиль и цвет границы */\n}\n```\n\nЕсли требуется более сложная граница с различными стилями линий (например, двойная линия), можно использовать комбинацию свойств `border-width`, `border-style` и `border-color`:\n\n```css\n/* Пример настройки сложной границы для блока с классом \"box\" */\n.box {\n    border: 3px double #000; /* Ширина, стиль и цвет границы */\n}\n```\n\nЭти примеры показывают базовые возможности настройки границ с использованием CSS.",
        "elapsed_time": 2.5,
        "точность": 7,
        "грамотность": 10,
        "полнота": 8,
        "лаконичность": 7
    },
    {
        "question": "Что делает метод render() в Django?",
        "answer": "Метод render() в Django используется для отображения шаблонов и передачи данных между различными компонентами веб-приложения. Этот метод принимает объект запроса, путь к шаблону и словарь контекста, а затем обрабатывает шаблон, подставляя значения из контекста и возвращая результат в виде HTTP-ответа для отображения пользователю.",
        "elapsed_time": 1.8,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Приведи пример, как задать в коде анимацию элемента на веб-странице.",
        "answer": "Ответ не может быть дан на основе предоставленного контекста.",
        "elapsed_time": 1.5,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Приведи пример, как создать на странице веб-форму в Django.",
        "answer": "Для создания веб-формы в Django необходимо выполнить следующие шаги:\n\n1. Определить модель для хранения данных формы.\n2. Создать форму на основе модели.\n3. Настроить представление (view) для отображения формы и обработки введенных данных.\n4. Добавить маршруты для формы в URL конфигурацию.\n\nДля примера, предположим, что у нас есть модель `Contact`, которая хранит данные о контактах пользователя.\n\n```python\n# models.py\nclass Contact(models.Model):\n    name = models.CharField(max_length=100)\n    email = models.EmailField()\n    message = models.TextField()\n\n# forms.py\nfrom django import forms\nfrom .models import Contact\n\nclass ContactForm(forms.ModelForm):\n    class Meta:\n        model = Contact\n        fields = ['name', 'email', 'message']\n\n# views.py\nfrom django.shortcuts import render, redirect\nfrom django.http import HttpResponse\nfrom .models import Contact\nfrom .forms import ContactForm\n\ndef contact_view(request):\n    if request.method == 'POST':\n        form = ContactForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('thanks')\n    else:\n        form = ContactForm()\n    return render(request, 'contact_form.html', {'form': form})\n\n# urls.py\nfrom django.urls import path\nfrom .views import contact_view\n\nurlpatterns = [\n    path('contact/', contact_view),\n]\n```\n\nЭтот код создает простую веб-форму для добавления контактов, которая затем сохраняется в базе данных. Обратите внимание, что в реальном проекте могут потребоваться дополнительные проверки и обработка ошибок.",
        "elapsed_time": 3.4,
        "точность": 5,
        "грамотность": 10,
        "полнота": 5,
        "лаконичность": 5
    },
    {
        "question": "Как связать HTML и CSS файлы?",
        "answer": "Ответ не может быть дан на основе предоставленного контекста.",
        "elapsed_time": 1.5,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Как используется формат JSON в веб-приложениях?",
        "answer": "JSON (JavaScript Object Notation) широко используется в веб-приложениях для обмена данными как между браузером и сервером (AJAX), так и между самими серверами (программные HTTP-интерфейсы). Этот формат представляет собой простой и лаконичный способ записи данных в виде пар \"имя свойства\": значение. В различных языках программирования JSON реализуется как объект, структура, словарь, запись, хэш-таблица или ассоциативный массив.",
        "elapsed_time": 1.9,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 9
    },
    {
        "question": "Что собой представляют cookie-файлы?",
        "answer": "Cookie-файлы представляют собой небольшие фрагменты данных, отправляемые веб-сервером и хранимые на компьютере пользователя. Веб-клиент (обычно веб-браузер) всякий раз при попытке открыть страницу портала пересылает этот фрагмент данных веб-серверу в составе HTTP-запроса. Применяются для сохранения данных на стороне пользователя.",
        "elapsed_time": 1.8,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Чем полезен фреймворк Bootstrap?",
        "answer": "Высокая скорость разработки макетов страниц сайта благодаря огромному набору готовых решений и элементов. Кроссбраузерность и адаптивность сайта, так как все элементы фреймворка адаптированы под все устройства и корректно отображаются во всех современных браузерах.",
        "elapsed_time": 1.7,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Что понимается под адаптивным дизайном сайта и как он реализуется?",
        "answer": "Адаптивный веб-дизайн (Responsive Web Design) — это дизайн веб-страниц, обеспечивающий корректное отображение сайта на различных устройствах, подключенных к интернету, и динамически подстраивающийся под заданные размеры окна браузера. Существует несколько подходов к созданию адаптированного портала, включая отдельный сайт, предполагающий только адаптивный дизайн, и работу с объектной моделью элементов на странице, подразумевающую смену их иерархии/вложенности на разных устройствах.",
        "elapsed_time": 2.0,
        "точность": 8,
        "грамотность": 9,
        "полнота": 10,
        "лаконичность": 8
    },
    {
        "question": "Как создаются различные типы списков в HTML и чем они отличаются?",
        "answer": "Ответ не может быть дан на основе предоставленного контекста.",
        "elapsed_time": 1.5,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Какой тег обеспечивает отправку веб-формы на сервер?",
        "answer": "Тег, обеспечивающий отправку веб-формы на сервер, называется `<form>`.",
        "elapsed_time": 1.5,
        "точность": 8,
        "грамотность": 10,
        "полнота": 6,
        "лаконичность": 10
    },
    {
        "question": "Каковы преимущества языка Python?",
        "answer": "Преимущества языка Python включают его простоту изучения, особенно на начальном этапе, открытый код, большое сообщество разработчиков и пользователей, множество полезных библиотек и расширений языка, а также поддержку кроссплатформенности и большого количества СУБД. Python также обладает простым синтаксисом, который стимулирует написание хорошо читаемого кода.",
        "elapsed_time": 1.8,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Каковы недостатки языка PHP?",
        "answer": "Недостатки языка PHP:\n1. Сложный синтаксис по сравнению с некоторыми другими языками, такими как Python или Ruby.\n2. Ограниченные возможности для создания масштабных приложений с высокими требованиями к производительности.\n3. Большое количество библиотек и расширений языка, что усложняет поддержку и управление.\n4. Проблемы с безопасностью при создании веб-приложений на PHP.\n5. Несогласованный синтаксис функций и влияние глобальных параметров конфигурации на базовый синтаксис языка.",
        "elapsed_time": 2.0,
        "точность": 10,
        "грамотность": 10,
        "полнота": 8,
        "лаконичность": 10
    },
    {
        "question": "Сколько конкретно тегов определено в языке HTML?",
        "answer": "Ответ не может быть дан на основе предоставленного контекста.",
        "elapsed_time": 1.5,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Как используется тег meta?",
        "answer": "Тег meta используется в HTML для добавления метаданных о веб-странице. Метаданные не отображаются на самой странице, но используются поисковыми системами, браузерами и другими сервисами для получения информации о странице. Основные функции тега meta включают:\n\n1. **Описание страницы (description)**: Описание страницы, которое может использоваться поисковыми системами для создания сниппета.\n2. **Ключевые слова (keywords)**: Список ключевых слов, которые помогают поисковым системам понять содержание страницы.\n3. **Авторство (author)**: Указание автора страницы.\n4. **Язык страницы (content-language)**: Определение языка страницы.\n5. **Управление кэшированием (cache-control)**: Настройка времени хранения кэша страницы.\n6. **Рекомендации по отображению (viewport)**: Контроль адаптивного дизайна для мобильных устройств.\n7. **События (event tracking)**: Добавление событий для аналитики, таких как отслеживание кликов.\n\nЭти метаданные помогают улучшить представление страницы в результатах поиска, управлять кэшем и улучшать взаимодействие с пользователем.",
        "elapsed_time": 2.7,
        "точность": 7,
        "грамотность": 10,
        "полнота": 7,
        "лаконичность": 7
    },
    {
        "question": "В чем заключается концепция MVC в веб-дизайне?",
        "answer": "Концепция MVC в веб-дизайне предполагает четкое разделение ответственности за различные функции в приложениях. Модель (Model) отвечает за обработку данных и взаимодействие с базой данных, представление (View) отвечает за отображение данных пользователю, а контроллер (Controller) управляет взаимодействием пользователя с приложением, обрабатывает введенные данные и передает их модели для обработки. Такой подход позволяет изменять внешний вид и стиль веб-сайта без изменений в управляющей логике и данных проекта.",
        "elapsed_time": 1.9,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Какие теги были исключены из html при переходе к html 5?",
        "answer": "Ответ не может быть дан на основе предоставленного контекста.",
        "elapsed_time": 1.5,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Какие теги были добавлены в html при переходе к html 5?",
        "answer": "Ответ не может быть дан на основе предоставленного контекста.",
        "elapsed_time": 1.5,
        "точность": 5,
        "грамотность": 10,
        "полнота": 5,
        "лаконичность": 10
    },
    {
        "question": "Какие среды разработки позволяют проектировать и отлаживать Django-приложения?",
        "answer": "Для проектирования и отладки Django-приложений можно использовать среду разработки Visual Studio 2019.",
        "elapsed_time": 1.5,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    },
    {
        "question": "Перечисли типы селекторов в CSS и поясни, как они создаются.",
        "answer": "Ответ не может быть дан на основе предоставленного контекста.",
        "elapsed_time": 1.5,
        "точность": 5,
        "грамотность": 10,
        "полнота": 5,
        "лаконичность": 10
    },
    {
        "question": "Какой объем оперативной памяти занимает интерпретатор языка Python?",
        "answer": "Ответ не может быть дан на основе предоставленного контекста.",
        "elapsed_time": 1.5,
        "точность": 10,
        "грамотность": 10,
        "полнота": 10,
        "лаконичность": 10
    }
]